apiVersion: "config.istio.io/v1alpha2"
kind: stackdriver
metadata:
  name: handler
  namespace: istio-system
spec:
  push_interval: 10s
  metricInfo:
    server-request-count.metric.istio-system:
      # Due to a bug in gogoproto deserialization, Enums in maps must be
      # specified by their integer value, not variant name. See
      # https://github.com/googleapis/googleapis/blob/master/google/api/metric.proto
      # MetricKind and ValueType for the values to provide.
      kind: 3 # CUMULATIVE
      value: 2 # INT64
      metric_type: "istio.io/service/server/request_count"
    server-request-bytes.metric.istio-system:
      kind: 3 # CUMULATIVE
      value: 5 # DISTRIBUTION
      buckets:
        exponentialBuckets:
          numFiniteBuckets: 20
          scale: 1
          growthFactor: 2
      metric_type: "istio.io/service/server/request_bytes"
    server-response-bytes.metric.istio-system:
      kind: 3 # CUMULATIVE
      value: 5 # DISTRIBUTION
      buckets:
        exponentialBuckets:
          numFiniteBuckets: 20
          scale: 1
          growthFactor: 2
      metric_type: "istio.io/service/server/response_bytes"
    server-response-latencies.metric.istio-system:
      kind: 3 # CUMULATIVE
      value: 5 # DISTRIBUTION
      buckets:
        exponentialBuckets:
          numFiniteBuckets: 20
          scale: 1
          growthFactor: 2
      metric_type: "istio.io/service/server/response_latencies"
    server-received-bytes-count.metric.istio-system:
      kind: 3 # CUMULATIVE
      value: 2 # INT64
      metric_type: "istio.io/service/server/received_bytes_count"
    server-sent-bytes-count.metric.istio-system:
      kind: 3 # CUMULATIVE
      value: 2 # INT64
      metric_type: "istio.io/service/server/sent_bytes_count"
---
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: stackdriver-server
  namespace: istio-system
spec:
  match: context.protocol == "http" # If omitted match is true.
  actions:
  - handler: handler.stackdriver
    instances:
    - server-request-count.metric
    - server-request-bytes.metric
    - server-response-bytes.metric
    - server-response-latencies.metric
---
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: stackdriver-tcp-server
  namespace: istio-system
spec:
  match: context.protocol == "tcp" # If omitted match is true.
  actions:
  - handler: handler.stackdriver
    instances:
    - server-received-bytes-count.metric
    - server-sent-bytes-count.metric
---
# Note, we're trying to keep the following metric definitions in line with metrics.yaml - we add extra here to handle
# populating monitored resource values.
apiVersion: "config.istio.io/v1alpha2"
kind: metric
metadata:
  name: server-request-count
  namespace: istio-system
spec:
  value: "1"
  dimensions:
    destination_service_name: destination.service.name | "unknown"
    destination_service_namespace: destination.service.namespace | "unknown"
    destination_port: destination.port | 0
    request_operation: request.method | "unknown"
    request_protocol: context.protocol | "unknown"
    api_version: api.version | "unknown"
    api_name: api.service | "unknown"
    response_code: response.code | 0
    service_authentication_policy: '"NONE"'
    source_workload_namespace: source.namespace | "unknown"
    source_workload_name: source.workload.name | "unknown"
    source_owner: source.owner | "unknown"
    destination_workload_namespace: destination.namespace | "unknown"
    destination_workload_name: destination.workload.name | "unknown"
    destination_owner: destination.owner | "unknown"
  monitoredResourceType: '"k8s_container"'
  monitoredResourceDimensions:
    # When using the global MR, this must be filled in, preferably matching the
    # project_id given above in stackdriver config.
    project_id: '""'
    cluster_name: '""'
    namespace_name: destination.namespace | "unknown"
    location: '""'
    container_name: '"unknown"'
    pod_name: destination.name | "unknown"
---
apiVersion: "config.istio.io/v1alpha2"
kind: metric
metadata:
  name: server-request-bytes
  namespace: istio-system
spec:
  value: request.size
  dimensions:
    destination_service_name: destination.service.name | "unknown"
    destination_service_namespace: destination.service.namespace | "unknown"
    destination_port: destination.port | 0
    request_operation: request.method | "unknown"
    request_protocol: context.protocol | "unknown"
    api_version: api.version | "unknown"
    api_name: api.service | "unknown"
    response_code: response.code | 0
    service_authentication_policy: '"NONE"'
    source_workload_namespace: source.namespace | "unknown"
    source_workload_name: source.workload.name | "unknown"
    source_owner: source.owner | "unknown"
    destination_workload_namespace: destination.namespace | "unknown"
    destination_workload_name: destination.workload.name | "unknown"
    destination_owner: destination.owner | "unknown"
  monitoredResourceType: '"k8s_container"'
  monitoredResourceDimensions:
    # When using the global MR, this must be filled in, preferably matching the
    # project_id given above in stackdriver config.
    project_id: '""'
    cluster_name: '""'
    namespace_name: destination.namespace | "unknown"
    location: '""'
    container_name: '"unknown"'
    pod_name: destination.name | "unknown"
---
apiVersion: "config.istio.io/v1alpha2"
kind: metric
metadata:
  name: server-response-bytes
  namespace: istio-system
spec:
  value: response.size
  dimensions:
    destination_service_name: destination.service.name | "unknown"
    destination_service_namespace: destination.service.namespace | "unknown"
    destination_port: destination.port | 0
    request_operation: request.method | "unknown"
    request_protocol: context.protocol | "unknown"
    api_version: api.version | "unknown"
    api_name: api.service | "unknown"
    response_code: response.code | 0
    service_authentication_policy: '"NONE"'
    source_workload_namespace: source.namespace | "unknown"
    source_workload_name: source.workload.name | "unknown"
    source_owner: source.owner | "unknown"
    destination_workload_namespace: destination.namespace | "unknown"
    destination_workload_name: destination.workload.name | "unknown"
    destination_owner: destination.owner | "unknown"
  monitoredResourceType: '"k8s_container"'
  monitoredResourceDimensions:
    # When using the global MR, this must be filled in, preferably matching the
    # project_id given above in stackdriver config.
    project_id: '""'
    cluster_name: '""'
    namespace_name: destination.namespace | "unknown"
    location: '""'
    container_name: '"unknown"'
    pod_name: destination.name | "unknown"
---
apiVersion: "config.istio.io/v1alpha2"
kind: metric
metadata:
  name: server-response-latencies
  namespace: istio-system
spec:
  value: response.duration
  dimensions:
    destination_service_name: destination.service.name | "unknown"
    destination_service_namespace: destination.service.namespace | "unknown"
    destination_port: destination.port | 0
    request_operation: request.method | "unknown"
    request_protocol: context.protocol | "unknown"
    api_version: api.version | "unknown"
    api_name: api.service | "unknown"
    response_code: response.code | 0
    service_authentication_policy: '"NONE"'
    source_workload_namespace: source.namespace | "unknown"
    source_workload_name: source.workload.name | "unknown"
    source_owner: source.owner | "unknown"
    destination_workload_namespace: destination.namespace | "unknown"
    destination_workload_name: destination.workload.name | "unknown"
    destination_owner: destination.owner | "unknown"
  monitoredResourceType: '"k8s_container"'
  monitoredResourceDimensions:
    # When using the global MR, this must be filled in, preferably matching the
    # project_id given above in stackdriver config.
    project_id: '""'
    cluster_name: '""'
    namespace_name: destination.namespace | "unknown"
    location: '""'
    container_name: '"unknown"'
    pod_name: destination.name | "unknown"
---
apiVersion: "config.istio.io/v1alpha2"
kind: metric
metadata:
  name: server-received-bytes-count
  namespace: istio-system
spec:
  value: connection.received.bytes | 0
  dimensions:
    destination_service_name: destination.service.name | "unknown"
    destination_service_namespace: destination.service.namespace | "unknown"
    destination_port: destination.port | 0
    request_operation: request.method | "unknown"
    request_protocol: context.protocol | "unknown"
    api_version: api.version | "unknown"
    api_name: api.service | "unknown"
    response_code: response.code | 0
    service_authentication_policy: '"NONE"'
    source_workload_namespace: source.namespace | "unknown"
    source_workload_name: source.workload.name | "unknown"
    source_owner: source.owner | "unknown"
    destination_workload_namespace: destination.namespace | "unknown"
    destination_workload_name: destination.workload.name | "unknown"
    destination_owner: destination.owner | "unknown"
  monitoredResourceType: '"k8s_container"'
  monitoredResourceDimensions:
    # When using the global MR, this must be filled in, preferably matching the
    # project_id given above in stackdriver config.
    project_id: '""'
    cluster_name: '""'
    namespace_name: destination.namespace | "unknown"
    location: '""'
    container_name: '"unknown"'
    pod_name: destination.name | "unknown"
---
apiVersion: "config.istio.io/v1alpha2"
kind: metric
metadata:
  name: server-sent-bytes-count
  namespace: istio-system
spec:
  value: connection.sent.bytes | 0
  dimensions:
    destination_service_name: destination.service.name | "unknown"
    destination_service_namespace: destination.service.namespace | "unknown"
    destination_port: destination.port | 0
    request_operation: request.method | "unknown"
    request_protocol: context.protocol | "unknown"
    api_version: api.version | "unknown"
    api_name: api.service | "unknown"
    response_code: response.code | 0
    service_authentication_policy: '"NONE"'
    source_workload_namespace: source.namespace | "unknown"
    source_workload_name: source.workload.name | "unknown"
    source_owner: source.owner | "unknown"
    destination_workload_namespace: destination.namespace | "unknown"
    destination_workload_name: destination.workload.name | "unknown"
    destination_owner: destination.owner | "unknown"
  monitoredResourceType: '"k8s_container"'
  monitoredResourceDimensions:
    # When using the global MR, this must be filled in, preferably matching the
    # project_id given above in stackdriver config.
    project_id: '""'
    cluster_name: '""'
    namespace_name: destination.namespace | "unknown"
    location: '""'
    container_name: '"unknown"'
    pod_name: destination.name | "unknown"
